/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package com.scientific.project;
import java.math.BigDecimal;
import java.math.RoundingMode;
import java.util.Arrays;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.script.ScriptEngine;
import javax.script.ScriptEngineManager;
import javax.script.ScriptException;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;

/**
 *
 * @author SUNNY
 */
public class Scientific extends javax.swing.JFrame {

    /**
     * Creates new form Scientific
     */
    public Scientific() {
        initComponents();  
        ImageIcon ic=new ImageIcon("src\\calc\\pi.jpg");
        bpi.setIcon(ic);
        ImageIcon ic1=new ImageIcon("src\\calc\\porm.jpg");
        bporm.setIcon(ic1);
        ImageIcon ic2=new ImageIcon("src\\calc\\arrow.jpg");
        ImageIcon mulic=new ImageIcon("src\\calc\\cross2.jpg");
        bback.setIcon(ic2);
        bmul.setIcon(mulic);
        ImageIcon ic3=new ImageIcon("src\\calc\\root.jpg");
        broot.setIcon(ic3);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jp = new javax.swing.JPanel();
        bpanel = new javax.swing.JPanel();
        bdiv = new javax.swing.JButton();
        bce = new javax.swing.JButton();
        bc = new javax.swing.JButton();
        bback = new javax.swing.JButton();
        b7 = new javax.swing.JButton();
        b8 = new javax.swing.JButton();
        b9 = new javax.swing.JButton();
        bmul = new javax.swing.JButton();
        b4 = new javax.swing.JButton();
        b5 = new javax.swing.JButton();
        b6 = new javax.swing.JButton();
        bminus = new javax.swing.JButton();
        b1 = new javax.swing.JButton();
        b2 = new javax.swing.JButton();
        b3 = new javax.swing.JButton();
        bplus = new javax.swing.JButton();
        b0 = new javax.swing.JButton();
        bdot = new javax.swing.JButton();
        bequal = new javax.swing.JButton();
        bpanel1 = new javax.swing.JPanel();
        bright = new javax.swing.JButton();
        bm = new javax.swing.JButton();
        bpi = new javax.swing.JButton();
        bsin = new javax.swing.JButton();
        bm3 = new javax.swing.JButton();
        bm4 = new javax.swing.JButton();
        bporm = new javax.swing.JButton();
        bpi1 = new javax.swing.JButton();
        bpi2 = new javax.swing.JButton();
        bpi3 = new javax.swing.JButton();
        bpi4 = new javax.swing.JButton();
        broot = new javax.swing.JButton();
        bpi5 = new javax.swing.JButton();
        bpi6 = new javax.swing.JButton();
        bpi7 = new javax.swing.JButton();
        bpi8 = new javax.swing.JButton();
        bpi9 = new javax.swing.JButton();
        bpi10 = new javax.swing.JButton();
        bpi11 = new javax.swing.JButton();
        bpi12 = new javax.swing.JButton();
        bpi13 = new javax.swing.JButton();
        bpi14 = new javax.swing.JButton();
        deg = new javax.swing.JToggleButton();
        bright1 = new javax.swing.JButton();
        fe = new javax.swing.JToggleButton();
        t1 = new javax.swing.JTextField();
        t3 = new javax.swing.JTextField();
        bstandard = new javax.swing.JButton();
        bconverter = new javax.swing.JButton();
        bscientific = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Scientific");

        jp.setBackground(new java.awt.Color(0, 0, 0));

        bpanel.setBackground(new java.awt.Color(0, 0, 0));
        bpanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        bdiv.setBackground(new java.awt.Color(51, 51, 51));
        bdiv.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        bdiv.setForeground(new java.awt.Color(255, 255, 255));
        bdiv.setText("/");
        bdiv.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        bdiv.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bdivActionPerformed(evt);
            }
        });

        bce.setBackground(new java.awt.Color(51, 51, 51));
        bce.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        bce.setForeground(new java.awt.Color(255, 255, 255));
        bce.setText("CE");
        bce.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        bce.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bceActionPerformed(evt);
            }
        });

        bc.setBackground(new java.awt.Color(51, 51, 51));
        bc.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        bc.setForeground(new java.awt.Color(255, 255, 255));
        bc.setText("C");
        bc.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        bc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bcActionPerformed(evt);
            }
        });

        bback.setBackground(new java.awt.Color(51, 51, 51));
        bback.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        bback.setForeground(new java.awt.Color(255, 255, 255));
        bback.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        bback.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bbackActionPerformed(evt);
            }
        });

        b7.setBackground(new java.awt.Color(51, 51, 51));
        b7.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        b7.setForeground(new java.awt.Color(255, 255, 255));
        b7.setText("7");
        b7.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        b7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b7ActionPerformed(evt);
            }
        });

        b8.setBackground(new java.awt.Color(51, 51, 51));
        b8.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        b8.setForeground(new java.awt.Color(255, 255, 255));
        b8.setText("8");
        b8.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        b8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b8ActionPerformed(evt);
            }
        });

        b9.setBackground(new java.awt.Color(51, 51, 51));
        b9.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        b9.setForeground(new java.awt.Color(255, 255, 255));
        b9.setText("9");
        b9.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        b9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b9ActionPerformed(evt);
            }
        });

        bmul.setBackground(new java.awt.Color(51, 51, 51));
        bmul.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        bmul.setForeground(new java.awt.Color(255, 255, 255));
        bmul.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        bmul.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bmulActionPerformed(evt);
            }
        });

        b4.setBackground(new java.awt.Color(51, 51, 51));
        b4.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        b4.setForeground(new java.awt.Color(255, 255, 255));
        b4.setText("4");
        b4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        b4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b4ActionPerformed(evt);
            }
        });

        b5.setBackground(new java.awt.Color(51, 51, 51));
        b5.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        b5.setForeground(new java.awt.Color(255, 255, 255));
        b5.setText("5");
        b5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        b5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b5ActionPerformed(evt);
            }
        });

        b6.setBackground(new java.awt.Color(51, 51, 51));
        b6.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        b6.setForeground(new java.awt.Color(255, 255, 255));
        b6.setText("6");
        b6.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        b6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b6ActionPerformed(evt);
            }
        });

        bminus.setBackground(new java.awt.Color(51, 51, 51));
        bminus.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        bminus.setForeground(new java.awt.Color(255, 255, 255));
        bminus.setText("-");
        bminus.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        bminus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bminusActionPerformed(evt);
            }
        });

        b1.setBackground(new java.awt.Color(51, 51, 51));
        b1.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        b1.setForeground(new java.awt.Color(255, 255, 255));
        b1.setText("1");
        b1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        b1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b1ActionPerformed(evt);
            }
        });

        b2.setBackground(new java.awt.Color(51, 51, 51));
        b2.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        b2.setForeground(new java.awt.Color(255, 255, 255));
        b2.setText("2");
        b2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        b2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b2ActionPerformed(evt);
            }
        });

        b3.setBackground(new java.awt.Color(51, 51, 51));
        b3.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        b3.setForeground(new java.awt.Color(255, 255, 255));
        b3.setText("3");
        b3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        b3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b3ActionPerformed(evt);
            }
        });

        bplus.setBackground(new java.awt.Color(51, 51, 51));
        bplus.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        bplus.setForeground(new java.awt.Color(255, 255, 255));
        bplus.setText("+");
        bplus.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        bplus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bplusActionPerformed(evt);
            }
        });

        b0.setBackground(new java.awt.Color(51, 51, 51));
        b0.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        b0.setForeground(new java.awt.Color(255, 255, 255));
        b0.setText("0");
        b0.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        b0.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b0ActionPerformed(evt);
            }
        });

        bdot.setBackground(new java.awt.Color(51, 51, 51));
        bdot.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        bdot.setForeground(new java.awt.Color(255, 255, 255));
        bdot.setText(".");
        bdot.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        bdot.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bdotActionPerformed(evt);
            }
        });

        bequal.setBackground(new java.awt.Color(51, 51, 51));
        bequal.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        bequal.setForeground(new java.awt.Color(255, 255, 255));
        bequal.setText("=");
        bequal.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        bequal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bequalActionPerformed(evt);
            }
        });

        bpanel1.setBackground(new java.awt.Color(0, 0, 0));

        bright.setBackground(new java.awt.Color(51, 51, 51));
        bright.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        bright.setForeground(new java.awt.Color(255, 255, 255));
        bright.setText(")");
        bright.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        bright.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                brightActionPerformed(evt);
            }
        });

        bm.setBackground(new java.awt.Color(51, 51, 51));
        bm.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        bm.setForeground(new java.awt.Color(255, 255, 255));
        bm.setText("M");
        bm.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        bm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bmActionPerformed(evt);
            }
        });

        bpi.setBackground(new java.awt.Color(51, 51, 51));
        bpi.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        bpi.setForeground(new java.awt.Color(255, 255, 255));
        bpi.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        bpi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bpiActionPerformed(evt);
            }
        });

        bsin.setBackground(new java.awt.Color(51, 51, 51));
        bsin.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        bsin.setForeground(new java.awt.Color(255, 255, 255));
        bsin.setText("sin");
        bsin.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        bsin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bsinActionPerformed(evt);
            }
        });

        bm3.setBackground(new java.awt.Color(51, 51, 51));
        bm3.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        bm3.setForeground(new java.awt.Color(255, 255, 255));
        bm3.setText("cos");
        bm3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        bm3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bm3ActionPerformed(evt);
            }
        });

        bm4.setBackground(new java.awt.Color(51, 51, 51));
        bm4.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        bm4.setForeground(new java.awt.Color(255, 255, 255));
        bm4.setText("tan");
        bm4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        bm4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bm4ActionPerformed(evt);
            }
        });

        bporm.setBackground(new java.awt.Color(51, 51, 51));
        bporm.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        bporm.setForeground(new java.awt.Color(255, 255, 255));
        bporm.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        bporm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bpormActionPerformed(evt);
            }
        });

        bpi1.setBackground(new java.awt.Color(51, 51, 51));
        bpi1.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        bpi1.setForeground(new java.awt.Color(255, 255, 255));
        bpi1.setText("x^2");
        bpi1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        bpi1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bpi1ActionPerformed(evt);
            }
        });

        bpi2.setBackground(new java.awt.Color(51, 51, 51));
        bpi2.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        bpi2.setForeground(new java.awt.Color(255, 255, 255));
        bpi2.setText("sin-1");
        bpi2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        bpi2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bpi2ActionPerformed(evt);
            }
        });

        bpi3.setBackground(new java.awt.Color(51, 51, 51));
        bpi3.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        bpi3.setForeground(new java.awt.Color(255, 255, 255));
        bpi3.setText("cos-1");
        bpi3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        bpi3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bpi3ActionPerformed(evt);
            }
        });

        bpi4.setBackground(new java.awt.Color(51, 51, 51));
        bpi4.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        bpi4.setForeground(new java.awt.Color(255, 255, 255));
        bpi4.setText("tan-1");
        bpi4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        bpi4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bpi4ActionPerformed(evt);
            }
        });

        broot.setBackground(new java.awt.Color(51, 51, 51));
        broot.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        broot.setForeground(new java.awt.Color(255, 255, 255));
        broot.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        broot.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                brootActionPerformed(evt);
            }
        });

        bpi5.setBackground(new java.awt.Color(51, 51, 51));
        bpi5.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        bpi5.setForeground(new java.awt.Color(255, 255, 255));
        bpi5.setText("x^y");
        bpi5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        bpi5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bpi5ActionPerformed(evt);
            }
        });

        bpi6.setBackground(new java.awt.Color(51, 51, 51));
        bpi6.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        bpi6.setForeground(new java.awt.Color(255, 255, 255));
        bpi6.setText("10^x");
        bpi6.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        bpi6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bpi6ActionPerformed(evt);
            }
        });

        bpi7.setBackground(new java.awt.Color(51, 51, 51));
        bpi7.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        bpi7.setForeground(new java.awt.Color(255, 255, 255));
        bpi7.setText("e^x");
        bpi7.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        bpi7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bpi7ActionPerformed(evt);
            }
        });

        bpi8.setBackground(new java.awt.Color(51, 51, 51));
        bpi8.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        bpi8.setForeground(new java.awt.Color(255, 255, 255));
        bpi8.setText("Mod");
        bpi8.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        bpi8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bpi8ActionPerformed(evt);
            }
        });

        bpi9.setBackground(new java.awt.Color(51, 51, 51));
        bpi9.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        bpi9.setForeground(new java.awt.Color(255, 255, 255));
        bpi9.setText("%");
        bpi9.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        bpi9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bpi9ActionPerformed(evt);
            }
        });

        bpi10.setBackground(new java.awt.Color(51, 51, 51));
        bpi10.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        bpi10.setForeground(new java.awt.Color(255, 255, 255));
        bpi10.setText("x^1/y");
        bpi10.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        bpi10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bpi10ActionPerformed(evt);
            }
        });

        bpi11.setBackground(new java.awt.Color(51, 51, 51));
        bpi11.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        bpi11.setForeground(new java.awt.Color(255, 255, 255));
        bpi11.setText("log");
        bpi11.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        bpi11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bpi11ActionPerformed(evt);
            }
        });

        bpi12.setBackground(new java.awt.Color(51, 51, 51));
        bpi12.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        bpi12.setForeground(new java.awt.Color(255, 255, 255));
        bpi12.setText("ln");
        bpi12.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        bpi12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bpi12ActionPerformed(evt);
            }
        });

        bpi13.setBackground(new java.awt.Color(51, 51, 51));
        bpi13.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        bpi13.setForeground(new java.awt.Color(255, 255, 255));
        bpi13.setText("n!");
        bpi13.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        bpi13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bpi13ActionPerformed(evt);
            }
        });

        bpi14.setBackground(new java.awt.Color(51, 51, 51));
        bpi14.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        bpi14.setForeground(new java.awt.Color(255, 255, 255));
        bpi14.setText("1/x");
        bpi14.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        bpi14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bpi14ActionPerformed(evt);
            }
        });

        deg.setBackground(new java.awt.Color(51, 51, 51));
        deg.setFont(new java.awt.Font("Arial Narrow", 0, 16)); // NOI18N
        deg.setForeground(new java.awt.Color(255, 255, 255));
        deg.setText("Deg");
        deg.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 51)));
        deg.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                degItemStateChanged(evt);
            }
        });
        deg.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                degActionPerformed(evt);
            }
        });

        bright1.setBackground(new java.awt.Color(51, 51, 51));
        bright1.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        bright1.setForeground(new java.awt.Color(255, 255, 255));
        bright1.setText("(");
        bright1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        bright1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bright1ActionPerformed(evt);
            }
        });

        fe.setBackground(new java.awt.Color(51, 51, 51));
        fe.setFont(new java.awt.Font("Arial Narrow", 0, 16)); // NOI18N
        fe.setForeground(new java.awt.Color(255, 255, 255));
        fe.setText("FE");
        fe.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 51)));
        fe.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                feItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout bpanel1Layout = new javax.swing.GroupLayout(bpanel1);
        bpanel1.setLayout(bpanel1Layout);
        bpanel1Layout.setHorizontalGroup(
            bpanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bpanel1Layout.createSequentialGroup()
                .addGroup(bpanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(bpanel1Layout.createSequentialGroup()
                        .addComponent(bpi1, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(bpi2, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(bpi3, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(bpi4, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(broot, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(bpanel1Layout.createSequentialGroup()
                        .addComponent(bpi5, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(bpi6, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(bpi7, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(bpi8, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(bpi9, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(bpanel1Layout.createSequentialGroup()
                        .addComponent(bpi10, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(bpi11, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(bpi12, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(bpi13, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(bpi14, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(bpanel1Layout.createSequentialGroup()
                        .addGroup(bpanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(bpi, javax.swing.GroupLayout.DEFAULT_SIZE, 49, Short.MAX_VALUE)
                            .addComponent(deg, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(bpanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(bpanel1Layout.createSequentialGroup()
                                .addComponent(bsin, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(bm3, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(bm4, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(bporm, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(bpanel1Layout.createSequentialGroup()
                                .addComponent(bright1, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(bright, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(fe, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(bm, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(92, Short.MAX_VALUE))
        );
        bpanel1Layout.setVerticalGroup(
            bpanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bpanel1Layout.createSequentialGroup()
                .addGroup(bpanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(bpanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(bm, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(bpanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(bright, javax.swing.GroupLayout.DEFAULT_SIZE, 46, Short.MAX_VALUE)
                            .addComponent(bright1, javax.swing.GroupLayout.DEFAULT_SIZE, 46, Short.MAX_VALUE))
                        .addComponent(deg, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(fe, javax.swing.GroupLayout.DEFAULT_SIZE, 46, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(bpanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(bpi, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bporm, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(bpanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(bsin, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(bm3, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(bm4, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(bpanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bpi1, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bpi2, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bpi3, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bpi4, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(broot, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(bpanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bpi5, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bpi6, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bpi7, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bpi8, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bpi9, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(9, 9, 9)
                .addGroup(bpanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bpi10, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bpi14, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bpi13, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bpi12, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bpi11, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        t1.setBackground(new java.awt.Color(51, 51, 51));
        t1.setFont(new java.awt.Font("Arial Narrow", 0, 36)); // NOI18N
        t1.setForeground(new java.awt.Color(255, 255, 255));
        t1.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        t1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 51)));

        t3.setBackground(new java.awt.Color(51, 51, 51));
        t3.setFont(new java.awt.Font("Arial Narrow", 0, 36)); // NOI18N
        t3.setForeground(new java.awt.Color(255, 255, 255));
        t3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 51)));

        javax.swing.GroupLayout bpanelLayout = new javax.swing.GroupLayout(bpanel);
        bpanel.setLayout(bpanelLayout);
        bpanelLayout.setHorizontalGroup(
            bpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bpanelLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(bpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(bpanelLayout.createSequentialGroup()
                        .addGroup(bpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, bpanelLayout.createSequentialGroup()
                                .addComponent(b0, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(bdot, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, bpanelLayout.createSequentialGroup()
                                .addComponent(b1, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(b2, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(b3, javax.swing.GroupLayout.DEFAULT_SIZE, 49, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(bpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(bplus, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(bequal, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(bpanelLayout.createSequentialGroup()
                        .addComponent(b4, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(b5, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(b6, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(bminus, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(bpanelLayout.createSequentialGroup()
                        .addComponent(bce, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(bc, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(bback, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(bdiv, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(bpanelLayout.createSequentialGroup()
                        .addComponent(b7, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(b8, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(b9, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(bmul, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(bpanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18))
            .addComponent(t1, javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(bpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(t3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 633, Short.MAX_VALUE))
        );
        bpanelLayout.setVerticalGroup(
            bpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bpanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(t1, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(62, 62, 62)
                .addGroup(bpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(bpanelLayout.createSequentialGroup()
                        .addGroup(bpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(bdiv, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(bback, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(bpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(bc, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(bce, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(bpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(bpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(b7, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(b8, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(b9, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(bmul, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(bpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(b4, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(b5, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(b6, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(bminus, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(bpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(b1, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(b2, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(b3, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(bplus, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(bpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(b0, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(bdot, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(bequal, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(bpanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(87, Short.MAX_VALUE))
            .addGroup(bpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(bpanelLayout.createSequentialGroup()
                    .addGap(63, 63, 63)
                    .addComponent(t3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(363, Short.MAX_VALUE)))
        );

        bstandard.setBackground(new java.awt.Color(0, 0, 0));
        bstandard.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        bstandard.setForeground(new java.awt.Color(153, 153, 153));
        bstandard.setText("Standard");
        bstandard.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        bstandard.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bstandardActionPerformed(evt);
            }
        });

        bconverter.setBackground(new java.awt.Color(0, 0, 0));
        bconverter.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        bconverter.setForeground(new java.awt.Color(153, 153, 153));
        bconverter.setText("Converter");
        bconverter.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        bconverter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bconverterActionPerformed(evt);
            }
        });

        bscientific.setBackground(new java.awt.Color(0, 0, 0));
        bscientific.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        bscientific.setForeground(new java.awt.Color(153, 153, 153));
        bscientific.setText("Scientific");
        bscientific.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        bscientific.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bscientificActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jpLayout = new javax.swing.GroupLayout(jp);
        jp.setLayout(jpLayout);
        jpLayout.setHorizontalGroup(
            jpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(bpanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jpLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(bstandard, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(bscientific, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(bconverter, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jpLayout.setVerticalGroup(
            jpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bstandard, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bconverter, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bscientific, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 7, Short.MAX_VALUE)
                .addComponent(bpanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jp, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jp, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bdivActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bdivActionPerformed
        // TODO add your handling code here:
        String s = t1.getText();
        String s2=t3.getText();
       if(s2.length()!=0)
       {
           t1.setText(s2);
           t3.setText("");
       }
        int last = s.length();
        char ch;
        //JOptionPane.showMessageDialog(null,last);
        if (s.length() != 0) {
            ch = s.charAt(last - 1);
            if (ch == '/') {
                //JOptionPane.showMessageDialog(null,s.charAt(s.lastIndexOf(s)));
                t1.setText(s);
            } else if ((ch == '-') || (ch == '+') || (ch == '*')) {
                s = s.substring(0, last - 1);
                t1.setText(s + "/");
            } //t1.setText(t1.getText()+"+");
            else {
                t1.setText(t1.getText() + "/");
            }
        } else if (s.length() == 0) {
            t1.setText(s);
        }
    }//GEN-LAST:event_bdivActionPerformed

    private void bceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bceActionPerformed
        // TODO add your handling code here:
         String s=t1.getText();
        //JOptionPane.showMessageDialog(rootPane,s);
        if(s.length()==0)
            t1.setText(s);
        else if((s.contains("+"))||(s.contains("-"))||(s.contains("*"))||(s.contains("/")))
        {
            int plast=s.lastIndexOf("+");
            int milast=s.lastIndexOf("-");
            int mulast=s.lastIndexOf("*");
            int dlast=s.lastIndexOf("/");            
            int []a={-1,-1,-1,-1};
            a[0]=plast;
            a[1]=milast;
            a[2]=mulast;
            a[3]=dlast;
            Arrays.sort(a);
            if((s.charAt(s.length()-1)=='+')||(s.charAt(s.length()-1)=='-')||(s.charAt(s.length()-1)=='*')||(s.charAt(s.length()-1)=='/'))
            {
                t1.setText(s.substring(0,s.length()-1));
                //JOptionPane.showMessageDialog(rootPane,s);
            }
            else if((s.indexOf("+")==-1)&&(s.indexOf("-")==-1)&&(s.indexOf("*")==-1)&&(s.indexOf("/")==-1))
            {
                t1.setText("");
                //JOptionPane.showMessageDialog(rootPane,s);
            }
            else
            {
                t1.setText(s.substring(0,a[3]+1));
                //JOptionPane.showMessageDialog(rootPane,s);
            }
        }
        else if((s.indexOf("+")==-1)&&(s.indexOf("-")==-1)&&(s.indexOf("*")==-1)&&(s.indexOf("/")==-1))
        {
            t1.setText("");
            //JOptionPane.showMessageDialog(rootPane,s);
        }
   }//GEN-LAST:event_bceActionPerformed

    private void bcActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bcActionPerformed
        // TODO add your handling code here:
        t1.setText("");
    }//GEN-LAST:event_bcActionPerformed

    private void bbackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bbackActionPerformed
        // TODO add your handling code here:
        String s = t1.getText();
        if (s.length() == 0) {
            t1.setText(s);
        } else if (s.length() > 0) {
            s = s.substring(0, s.length() - 1);
            t1.setText(s);
        }
    }//GEN-LAST:event_bbackActionPerformed

    private void b7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b7ActionPerformed
        // TODO add your handling code here:
        String s=t1.getText();
        String s2=t3.getText();
        //JOptionPane.showMessageDialog(rootPane,s2.length());
        if(("0.0".equals(s))||(s.length()==0)||(s2.length()!=0))
        {
            if(s.length()!=0)
            {
                char ch=s.charAt(s.length()-1);
                if((ch=='+')||(ch=='-')||(ch=='*')||(ch=='/'))
                {
                       t1.setText(s+b7.getText());
                }
                else if(ch=='.')
                {
                    t1.setText(s+b7.getText());
                }
                else 
                {
                        t1.setText(b7.getText());
                        t3.setText("");
                }
            }
            else
            t1.setText(s+b7.getText());
        }
        else
            t1.setText(s+b7.getText());  
    }//GEN-LAST:event_b7ActionPerformed

    private void b8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b8ActionPerformed
        // TODO add your handling code here:
        String s=t1.getText();
        String s2=t3.getText();
        //JOptionPane.showMessageDialog(rootPane,s2.length());
        if(("0.0".equals(s))||(s.length()==0)||(s2.length()!=0))
        {
            if(s.length()!=0)
            {
                char ch=s.charAt(s.length()-1);
                if((ch=='+')||(ch=='-')||(ch=='*')||(ch=='/'))
                {
                       t1.setText(s+b8.getText());
                }
                else if(ch=='.')
                {
                    t1.setText(s+b8.getText());
                }
                else 
                {
                        t1.setText(b8.getText());
                        t3.setText("");
                }
            }
            else
            t1.setText(s+b8.getText());
        }
        else
            t1.setText(s+b8.getText());
    }//GEN-LAST:event_b8ActionPerformed

    private void b9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b9ActionPerformed
        // TODO add your handling code here:
        String s=t1.getText();
        String s2=t3.getText();
        //JOptionPane.showMessageDialog(rootPane,s2.length());
        if(("0.0".equals(s))||(s.length()==0)||(s2.length()!=0))
        {
            if(s.length()!=0)
            {
                char ch=s.charAt(s.length()-1);
                if((ch=='+')||(ch=='-')||(ch=='*')||(ch=='/'))
                {
                       t1.setText(s+b9.getText());
                }
                else if(ch=='.')
                {
                    t1.setText(s+b9.getText());
                }
                else 
                {
                        t1.setText(b9.getText());
                        t3.setText("");
                }
            }
            else
            t1.setText(s+b9.getText());
        }
        else
            t1.setText(s+b9.getText());
    }//GEN-LAST:event_b9ActionPerformed

    private void bmulActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bmulActionPerformed
        // TODO add your handling code here:
        String s = t1.getText();
        String s2=t3.getText();
       if(s2.length()!=0)
       {
           t1.setText(s2);
           t3.setText("");
       }
        int last = s.length();
        char ch;
        //JOptionPane.showMessageDialog(null,last);
        if (s.length() != 0) {
            ch = s.charAt(last - 1);
            if (ch == '*') {
                //JOptionPane.showMessageDialog(null,s.charAt(s.lastIndexOf(s)));
                t1.setText(s);
            } else if ((ch == '-') || (ch == '+') || (ch == '/')) {
                s = s.substring(0, last - 1);
                t1.setText(s + "*");
            } //t1.setText(t1.getText()+"+");
            else {
                t1.setText(t1.getText() + "*");
            }
        } else if (s.length() == 0) {
            t1.setText(s);
        }
    }//GEN-LAST:event_bmulActionPerformed

    private void b4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b4ActionPerformed
        // TODO add your handling code here:
        String s=t1.getText();
        String s2=t3.getText();
        //JOptionPane.showMessageDialog(rootPane,s2.length());
        if(("0.0".equals(s))||(s.length()==0)||(s2.length()!=0))
        {
            if(s.length()!=0)
            {
                char ch=s.charAt(s.length()-1);
                if((ch=='+')||(ch=='-')||(ch=='*')||(ch=='/'))
                {
                       t1.setText(s+b4.getText());
                }
                else if(ch=='.')
                {
                    t1.setText(s+b4.getText());
                }
                else 
                {
                        t1.setText(b4.getText());
                        t3.setText("");
                }
            }
            else
            t1.setText(s+b4.getText());
        }
        else
            t1.setText(s+b4.getText());
    }//GEN-LAST:event_b4ActionPerformed

    private void b5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b5ActionPerformed
        String s=t1.getText();
        String s2=t3.getText();
        //JOptionPane.showMessageDialog(rootPane,s2.length());
        if(("0.0".equals(s))||(s.length()==0)||(s2.length()!=0))
        {
            if(s.length()!=0)
            {
                char ch=s.charAt(s.length()-1);
                if((ch=='+')||(ch=='-')||(ch=='*')||(ch=='/'))
                {
                       t1.setText(s+b5.getText());
                }
                else if(ch=='.')
                {
                    t1.setText(s+b5.getText());
                }
                else 
                {
                        t1.setText(b5.getText());
                        t3.setText("");
                }
            }
            else
            t1.setText(s+b5.getText());
        }
        else
            t1.setText(s+b5.getText());
    }//GEN-LAST:event_b5ActionPerformed

    private void b6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b6ActionPerformed
        // TODO add your handling code here:
        String s=t1.getText();
        String s2=t3.getText();
        //JOptionPane.showMessageDialog(rootPane,s2.length());
        if(("0.0".equals(s))||(s.length()==0)||(s2.length()!=0))
        {
            if(s.length()!=0)
            {
                char ch=s.charAt(s.length()-1);
                if((ch=='+')||(ch=='-')||(ch=='*')||(ch=='/'))
                {
                       t1.setText(s+b6.getText());
                }
                else if(ch=='.')
                {
                    t1.setText(s+b6.getText());
                }
                else 
                {
                        t1.setText(b6.getText());
                        t3.setText("");
                }
            }
            else
            t1.setText(s+b6.getText());
        }
        else
            t1.setText(s+b6.getText());
    }//GEN-LAST:event_b6ActionPerformed

    private void bminusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bminusActionPerformed
        // TODO add your handling code here:
        String s = t1.getText();
        String s2=t3.getText();
       if(s2.length()!=0)
       {
           t1.setText(s2);
           t3.setText("");
       }
        int last = s.length();
        char ch;
        //JOptionPane.showMessageDialog(null,last);
        if (s.length() != 0) {
            ch = s.charAt(last - 1);
            if (ch == '-') {
                //JOptionPane.showMessageDialog(null,s.charAt(s.lastIndexOf(s)));
                t1.setText(s);
            } else if ((ch == '/') || (ch == '+') || (ch == '*')) {
                s = s.substring(0, last - 1);
                t1.setText(s + "-");
            } //t1.setText(t1.getText()+"+");
            else {
                t1.setText(t1.getText() + "-");
            }
        } else if (s.length() == 0) {
            t1.setText(s+bminus.getText());
        }
    }//GEN-LAST:event_bminusActionPerformed

    private void b1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b1ActionPerformed
        // TODO add your handling code here:
        String s=t1.getText();
        String s2=t3.getText();
        //JOptionPane.showMessageDialog(rootPane,s2.length());
        if(("0.0".equals(s))||(s.length()==0)||(s2.length()!=0))
        {
            if(s.length()!=0)
            {
                char ch=s.charAt(s.length()-1);
                if((ch=='+')||(ch=='-')||(ch=='*')||(ch=='/'))
                {
                       t1.setText(s+b1.getText());
                }
                else if(ch=='.')
                {
                    t1.setText(s+b1.getText());
                }
                else 
                {
                        t1.setText(b1.getText());
                        t3.setText("");
                }
            }
            else
            t1.setText(s+b1.getText());
        }
        else
            t1.setText(s+b1.getText());
    }//GEN-LAST:event_b1ActionPerformed

    private void b2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b2ActionPerformed
        // TODO add your handling code here:
        String s=t1.getText();
        String s2=t3.getText();
        //JOptionPane.showMessageDialog(rootPane,s2.length());
        if(("0.0".equals(s))||(s.length()==0)||(s2.length()!=0))
        {
            if(s.length()!=0)
            {
                char ch=s.charAt(s.length()-1);
                if((ch=='+')||(ch=='-')||(ch=='*')||(ch=='/'))
                {
                       t1.setText(s+b2.getText());
                }
                else if(ch=='.')
                {
                    t1.setText(s+b2.getText());
                }
                else 
                {
                        t1.setText(b2.getText());
                        t3.setText("");
                }
            }
            else
            t1.setText(s+b2.getText());
        }
        else
            t1.setText(s+b2.getText());
    }//GEN-LAST:event_b2ActionPerformed

    private void b3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b3ActionPerformed
        // TODO add your handling code here:
        String s=t1.getText();
        String s2=t3.getText();
        //JOptionPane.showMessageDialog(rootPane,s2.length());
        if(("0.0".equals(s))||(s.length()==0)||(s2.length()!=0))
        {
            if(s.length()!=0)
            {
                char ch=s.charAt(s.length()-1);
                if((ch=='+')||(ch=='-')||(ch=='*')||(ch=='/'))
                {
                       t1.setText(s+b3.getText());
                }
                else if(ch=='.')
                {
                    t1.setText(s+b3.getText());
                }
                else 
                {
                        t1.setText(b3.getText());
                        t3.setText("");
                }
            }
            else
                t1.setText(s+b3.getText());
        }
        else
            t1.setText(s+b3.getText());
    }//GEN-LAST:event_b3ActionPerformed

    private void bplusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bplusActionPerformed
        // TODO add your handling code here:
        String s = t1.getText();
        String s2=t3.getText();
       if(s2.length()!=0)
       {
           t1.setText(s2);
           t3.setText("");
       }
        int last = s.length();
        char ch;
        //JOptionPane.showMessageDialog(null,last);
        if (s.length() != 0) {
            ch = s.charAt(last - 1);
            if (ch == '+') {
                //JOptionPane.showMessageDialog(null,s.charAt(s.lastIndexOf(s)));
                t1.setText(s);
            } else if ((ch == '-') || (ch == '/') || (ch == '*')) {
                s = s.substring(0, last - 1);
                t1.setText(s + "+");
            } //t1.setText(t1.getText()+"+");
            else {
                t1.setText(t1.getText() + "+");
            }
        } else if (s.length() == 0) {
            t1.setText(s);
        }
    }//GEN-LAST:event_bplusActionPerformed

    private void b0ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b0ActionPerformed
        // TODO add your handling code here:
        String s=t1.getText();
        String s2=t3.getText();
        //JOptionPane.showMessageDialog(rootPane,s2.length());
        if(("0.0".equals(s))||(s.length()==0)||(s2.length()!=0))
        {
            if(s.length()!=0)
            {
                char ch=s.charAt(s.length()-1);
                if((ch=='+')||(ch=='-')||(ch=='*')||(ch=='/'))
                {
                       t1.setText(s+b0.getText());
                }
                else if(ch=='.')
                {
                    t1.setText(s+b0.getText());
                }
                else 
                {
                        t1.setText(b0.getText());
                        t3.setText("");
                }
            }
            else
                t1.setText(s+b0.getText());
        }
        else
            t1.setText(s+b0.getText());
    }//GEN-LAST:event_b0ActionPerformed

    private void bdotActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bdotActionPerformed
        // TODO add your handling code here:
        String s=t1.getText();
        int plus,minus,mul,div,plast,milast,mulast,dlast;
        plus=minus=mul=div=plast=milast=mulast=dlast=-1;
        plus=s.indexOf("+");
        //JOptionPane.showMessageDialog(rootPane, plus+"Plus");
        minus=s.indexOf("-");
        //JOptionPane.showMessageDialog(rootPane, minus+"Minus");
        mul=s.indexOf("*");
        //JOptionPane.showMessageDialog(rootPane, mul+"Mul");
        div=s.indexOf("/");
        //JOptionPane.showMessageDialog(rootPane, div+"Div");
        plast=s.lastIndexOf("+");
        //JOptionPane.showMessageDialog(rootPane, plast+"plast");
        milast=s.lastIndexOf("-");
        //JOptionPane.showMessageDialog(rootPane, milast+"milast");
        mulast=s.lastIndexOf("*");
        //JOptionPane.showMessageDialog(rootPane, mulast+"mulast");
        dlast=s.lastIndexOf("/");
        //JOptionPane.showMessageDialog(rootPane, dlast+"dlast");
        int []a={0,0,0,0};                
        a[0]=plast;
        a[1]=milast;
        a[2]=mulast;
        a[3]=dlast;
        //for(int i=0;i<a.length;i++)
            //JOptionPane.showMessageDialog(rootPane, (a[i]+" a"+i));
        Arrays.sort(a);
        //for(int i=0;i<a.length;i++)
            //JOptionPane.showMessageDialog(rootPane, (a[i]+" a"+i));
        //JOptionPane.showMessageDialog(rootPane,a[3]+"OP Index");
        //JOptionPane.showMessageDialog(rootPane,s.lastIndexOf(".")+"Dot last");
        if(s.length()==0)
        {
            t1.setText(".");
        }
        else if(s.indexOf('.')==-1)
        {
            t1.setText(s+".");
        }        
        else if(a[a.length-1]>s.lastIndexOf("."))
        {
            t1.setText(s+bdot.getText());
        }
    }//GEN-LAST:event_bdotActionPerformed

    private void bequalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bequalActionPerformed
        // TODO add your handling code here:
        String s=t1.getText();
        String exp="";
        ScriptEngineManager mgr=new ScriptEngineManager();
        ScriptEngine engine=mgr.getEngineByName("JavaScript");
        try {            
            if(s.length()==0)
            {
                JOptionPane.showMessageDialog(null,"Enter Values to Calculate");
            }
            else
            {
                 if((s.charAt(s.length()-1)=='/')||(s.charAt(s.length()-1)=='*')||(s.charAt(s.length()-1)=='-')||(s.charAt(s.length()-1)=='+')||(s.charAt(s.length()-1)=='^')||(s.charAt(s.length()-1)=='%'))
                 {
                    JOptionPane.showMessageDialog(null,"Too few arguments passed to operator for calculation");
                 }
                 else
                 {
                    if((s.contains("^"))&&(s.charAt(s.length()-1)!='^'))
                    {
                        String s1=s.substring(0,(s.indexOf("^")));
                //JOptionPane.showMessageDialog(rootPane,s1);
                        String s2=s.substring((s.indexOf("^")+1),(s.length()));
                //JOptionPane.showMessageDialog(rootPane,s2);
                        double d=Math.pow(Double.parseDouble(s1),Double.parseDouble(s2));
                        t3.setText(Double.toString(d));
                    }
                    else if(s.charAt(s.length()-1)=='^')
                    {
            //float f=Float.parseFloat(s);
                        JOptionPane.showMessageDialog(rootPane,"Enter Second Number To Caluclate Power");
                
                    }
                    else
                    {
                        exp=engine.eval(t1.getText()).toString();
                        BigDecimal b=new BigDecimal(exp);
                        b=b.setScale(2, RoundingMode.UP);
                    //JOptionPane.showMessageDialog(rootPane,engine.eval(t1.getText()));
                        if(("Infinity".equals(exp))||("-Infinity".equals(exp))||("Nan".equals(exp)))
                        {   
                            JOptionPane.showMessageDialog(null,"You are Performed Invalid Operation");
                            t1.setText("");
                        }            
               
                        else
                        {
                        //exp=engine.eval(t1.getText()).toString();
                            t3.setText(b.toString());
                        }
                    }
                 }
            }
        } 
        catch (ScriptException ex)
        {
            JOptionPane.showMessageDialog(rootPane,"Invalid Expression Format");
            t1.setText("");
        }
        catch(NumberFormatException exp1)
        {
            JOptionPane.showMessageDialog(rootPane,"Invalid Expression Format");
        }
    }//GEN-LAST:event_bequalActionPerformed

    private void brightActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_brightActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_brightActionPerformed

    private void bmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bmActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_bmActionPerformed

    private void bpiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bpiActionPerformed
        // TODO add your handling code here:
        BigDecimal b=new BigDecimal(Math.PI);
        b=b.setScale(4, RoundingMode.UP);
        t1.setText(b.toString());
    }//GEN-LAST:event_bpiActionPerformed

    private void bsinActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bsinActionPerformed
        // TODO add your handling code here:
        String s=t1.getText();
        try
        {
            if(s.length()==0)
            {
                JOptionPane.showMessageDialog(rootPane,"Enter Value To Calculate");
                t1.setText(s);
            }            
            else
            {
                ScriptEngineManager mgr=new ScriptEngineManager();
                ScriptEngine engine=mgr.getEngineByName("JavaScript");
                String exp=null;
                try {
                    exp=engine.eval(s).toString();
                }catch (ScriptException ex) {
                    //JOptionPane.showMessageDialog(rootPane,"Invalid Expression Format");
                }
                double d=Double.parseDouble(exp);
                if(deg.isSelected())
                {
                    d=Math.sin(Math.toRadians(d));            
                    BigDecimal b=new BigDecimal(d);
                    b=b.setScale(4, RoundingMode.UP);
                    t3.setText(b.toString());
                }
                else
                {
                    d=Math.sin((d));            
                    BigDecimal b=new BigDecimal(d);
                    b=b.setScale(4, RoundingMode.UP);
                    t3.setText(b.toString());
                }
            }
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(rootPane,"Unknown Expression Format for calculating Sine Value");
        }
    }//GEN-LAST:event_bsinActionPerformed

    private void bm3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bm3ActionPerformed
        // TODO add your handling code here:
        String s=t1.getText();
        try
        {
            if(s.length()==0)
             {
                JOptionPane.showMessageDialog(rootPane,"Enter Value To Calculate");
                t1.setText(s);
            }    
            else
            {
               ScriptEngineManager mgr=new ScriptEngineManager();
                ScriptEngine engine=mgr.getEngineByName("JavaScript");
                String exp=null;
                try 
                {
                    exp=engine.eval(s).toString();
                }
                catch (ScriptException ex)
                {
                    //Logger.getLogger(Scientific.class.getName()).log(Level.SEVERE, null, ex);
                }
                double d=Double.parseDouble(exp);
                if(deg.isSelected())
                {
                    d=Math.cos(Math.toRadians(d));            
                    BigDecimal b=new BigDecimal(d);
                    b=b.setScale(4, RoundingMode.UP);
                    t3.setText(b.toString());
                }
                else
                {
                    d=Math.cos((d));            
                    BigDecimal b=new BigDecimal(d);
                    b=b.setScale(4, RoundingMode.UP);
                    t3.setText(b.toString());
                }           
            }
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(rootPane,"Unknown Expression Format for calculating Cosine Value");
        }
    }//GEN-LAST:event_bm3ActionPerformed

    private void bm4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bm4ActionPerformed
        // TODO add your handling code here:
        String s=t1.getText();
        try
        {
            if(s.length()==0)
            {
                JOptionPane.showMessageDialog(rootPane,"Enter Value To Calculate");
                t1.setText(s);
            }    
            else
            {
                ScriptEngineManager mgr=new ScriptEngineManager();
                ScriptEngine engine=mgr.getEngineByName("JavaScript");
                String exp=null;
                try {
                    exp=engine.eval(s).toString();
                } catch (ScriptException ex) {
                    //Logger.getLogger(Scientific.class.getName()).log(Level.SEVERE, null, ex);
                }
                double d=Double.parseDouble(exp);
                if(deg.isSelected())
                {
                    d=Math.tan(Math.toRadians(d));            
                    BigDecimal b=new BigDecimal(d);
                    b=b.setScale(4, RoundingMode.UP);
                    t3.setText(b.toString());
                }
                else
                {
                    d=Math.tan((d));            
                    BigDecimal b=new BigDecimal(d);
                    b=b.setScale(4, RoundingMode.UP);
                    t3.setText(b.toString());
                }           
            }
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(rootPane,"Unknown Expression Format for calculating Tangent Value");
        }
    }//GEN-LAST:event_bm4ActionPerformed

    private void bpormActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bpormActionPerformed
        // TODO add your handling code here:
        String s=t1.getText();
        try
        {
            if(s.length()==0)
                t1.setText("");
            else
            {
                float f=Float.parseFloat(s);
                f=-(f);
                t1.setText(Float.toString(f));
            }
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(rootPane,"Unknown Expression Format");
        }
    }//GEN-LAST:event_bpormActionPerformed

    private void bpi1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bpi1ActionPerformed
        // TODO add your handling code here:
        String s=t1.getText();
        String s3=t3.getText();
        if(s.length()==0)
        {
            t1.setText(s);
            t3.setText("");
        }
        else
        {
                ScriptEngineManager mgr=new ScriptEngineManager();
                ScriptEngine engine=mgr.getEngineByName("JavaScript");
                String exp=null;
                try {
                    exp=engine.eval(s).toString();
                }catch (ScriptException ex) {
                    //JOptionPane.showMessageDialog(rootPane,"Invalid Expression Format");
                }
                double d=Double.parseDouble(exp);
            //float f=Float.parseFloat(s);
            //f=f*f;
                d=d*d;
                BigDecimal b=new BigDecimal(d);
                b=b.setScale(4, RoundingMode.UP);
                t3.setText(String.valueOf(b));
        }
    }//GEN-LAST:event_bpi1ActionPerformed

    private void bpi2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bpi2ActionPerformed
        // TODO add your handling code here:
        String s=t1.getText();
        if(s.length()==0)
        {
            JOptionPane.showMessageDialog(rootPane,"Enter Value To Calculate");
            t1.setText(s);
        }    
        else
        {
                ScriptEngineManager mgr=new ScriptEngineManager();
                ScriptEngine engine=mgr.getEngineByName("JavaScript");
                String exp=null;
                try {
                    exp=engine.eval(s).toString();
                }catch (ScriptException ex) {
                    //JOptionPane.showMessageDialog(rootPane,"Invalid Expression Format");
                }
                double d=Double.parseDouble(exp);
                //double d=Double.parseDouble(s);
                d=Math.asin(d);
                if(deg.isSelected())
                {
                    d=Math.toDegrees(d);
                    if("NaN".equals(Double.toString(d)))
                    {
                        JOptionPane.showMessageDialog(rootPane,"Enter Value Within the Range of [0-1]");
                        t1.setText("");
                    }
                    else
                    {
                        BigDecimal b=new BigDecimal(d);
                        b=b.setScale(4, RoundingMode.UP);
                        t3.setText(String.valueOf(b));
                    }
                }
                else
                {
                    //d=Math.toRadians(d);
                    if("NaN".equals(Double.toString(d)))
                    {
                        JOptionPane.showMessageDialog(rootPane,"Enter Value Within the Range of [0-1]");
                        t1.setText("");
                    }
                    else
                    {
                        BigDecimal b=new BigDecimal(d);
                        b=b.setScale(4, RoundingMode.UP);
                        t3.setText(String.valueOf(b));
                    }
                }
        }
    }//GEN-LAST:event_bpi2ActionPerformed

    private void bpi3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bpi3ActionPerformed
        // TODO add your handling code here:
        String s=t1.getText();
        if(s.length()==0)
        {
            JOptionPane.showMessageDialog(rootPane,"Enter Value To Calculate");
            t1.setText(s);
        }    
        else
        {
                ScriptEngineManager mgr=new ScriptEngineManager();
                ScriptEngine engine=mgr.getEngineByName("JavaScript");
                String exp=null;
                try {
                    exp=engine.eval(s).toString();
                }catch (ScriptException ex) {
                    //JOptionPane.showMessageDialog(rootPane,"Invalid Expression Format");
                }
                double d=Double.parseDouble(exp);
                d=Math.acos(d);
                if(deg.isSelected())
                {
                    d=Math.toDegrees(d);
                    if("NaN".equals(Double.toString(d)))
                    {
                        JOptionPane.showMessageDialog(rootPane,"Enter Value Within the Range of [0-1]");
                        t1.setText("");
                    }
                    else
                    {
                        BigDecimal b=new BigDecimal(d);
                        b=b.setScale(4, RoundingMode.UP);
                        t3.setText(String.valueOf(b));
                    }
                }
                else
                {
                    //d=Math.toRadians(d);
                    if("NaN".equals(Double.toString(d)))
                    {
                        JOptionPane.showMessageDialog(rootPane,"Enter Value Within the Range of [0-1]");
                        t1.setText("");
                    }
                    else
                    {
                        BigDecimal b=new BigDecimal(d);
                        b=b.setScale(4, RoundingMode.UP);
                        t3.setText(String.valueOf(b));
                    }
                }
        }
    }//GEN-LAST:event_bpi3ActionPerformed

    private void bpi4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bpi4ActionPerformed
        // TODO add your handling code here:
        String s=t1.getText();
        if(s.length()==0)
        {
            JOptionPane.showMessageDialog(rootPane,"Enter Value To Calculate");
            t1.setText(s);
        }
        else
        {
                ScriptEngineManager mgr=new ScriptEngineManager();
                ScriptEngine engine=mgr.getEngineByName("JavaScript");
                String exp=null;
                try {
                    exp=engine.eval(s).toString();
                }catch (ScriptException ex) {
                    //JOptionPane.showMessageDialog(rootPane,"Invalid Expression Format");
                }
                double d=Double.parseDouble(exp);
                d=Math.atan(d);
                if(deg.isSelected())
                {
                    d=Math.toDegrees(d);
                    if("NaN".equals(Double.toString(d)))
                    {
                        JOptionPane.showMessageDialog(rootPane,"Enter Value Within the Range of [0-1]");
                        t1.setText("");
                    }
                    else
                    {
                        BigDecimal b=new BigDecimal(d);
                        b=b.setScale(4, RoundingMode.UP);
                        t3.setText(String.valueOf(b));
                    }
                }
                else
                {
                    //d=Math.toRadians(d);
                    if("NaN".equals(Double.toString(d)))
                    {
                        JOptionPane.showMessageDialog(rootPane,"Enter Value Within the Range of [0-1]");
                        t1.setText("");
                    }
                    else
                    {
                        BigDecimal b=new BigDecimal(d);
                        b=b.setScale(4, RoundingMode.UP);
                        t3.setText(String.valueOf(b));
                    }
                }
        }
    }//GEN-LAST:event_bpi4ActionPerformed

    private void brootActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_brootActionPerformed
        // TODO add your handling code here:
        String s=t1.getText();        
        if(s.length()==0)
            t1.setText(s);
        else
        {
            double d=Double.parseDouble(s);
            d=Math.sqrt(d);
            BigDecimal b=new BigDecimal(d);
            b=b.setScale(4, RoundingMode.UP);
            t3.setText(b.toString());
        }
    }//GEN-LAST:event_brootActionPerformed

    private void bpi5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bpi5ActionPerformed
        // TODO add your handling code here:
        String s=t1.getText();       
        if(s.length()==0)
        {
            t1.setText(s);
            t3.setText(s);
        }
        else
        {
            if((s.contains("^"))&&(s.charAt(s.length()-1)!='^'))
            {
                //JOptionPane.showMessageDialog(rootPane,s.indexOf("^"));
                String s1=s.substring(0,(s.indexOf("^")));
                //JOptionPane.showMessageDialog(rootPane,s1);
                String s2=s.substring((s.indexOf("^")+1),(s.length()));
                //JOptionPane.showMessageDialog(rootPane,s2);
                double d=Math.pow(Double.parseDouble(s1),Double.parseDouble(s2));
                t3.setText(Double.toString(d));
            }
            else if(s.charAt(s.length()-1)=='^')
            {
            //float f=Float.parseFloat(s);
                
                JOptionPane.showMessageDialog(rootPane,"Enter Second Number To Caluclate Power");
                
            }
            else
                t1.setText(s+"^");
        }
    }//GEN-LAST:event_bpi5ActionPerformed

    private void bpi6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bpi6ActionPerformed
        // TODO add your handling code here:
        String s=t1.getText();
        
        String exp="";
        if(s.length()==0)
        {
            t1.setText(s);
            t3.setText(s);
            JOptionPane.showMessageDialog(rootPane,"Enter Value First");
        }
        else
        {
            float f=Float.parseFloat(s);
            double d=Math.pow(10,f);
            t3.setText(Double.toString(d));
        }
    }//GEN-LAST:event_bpi6ActionPerformed

    private void bpi7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bpi7ActionPerformed
        // TODO add your handling code here:
        String s=t1.getText();
        if(s.length()==0)
        {
            JOptionPane.showMessageDialog(rootPane,"Enter Value to Calculate");
            t1.setText("");
            t3.setText("");
        }
        else
        {
            //double d=Math.pow(2.71828, Double.parseDouble(s));                  
            double d=Math.exp(Double.parseDouble(s));
            BigDecimal b=new BigDecimal(d);
            b=b.setScale(5, RoundingMode.UP);
            t3.setText(b.toString());            
        }
    }//GEN-LAST:event_bpi7ActionPerformed

    private void bpi8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bpi8ActionPerformed
        // TODO add your handling code here:
        String s=t1.getText();        
        String exp="";
        if(s.length()==0)
        {
            t1.setText(s);
            t3.setText(s);
            JOptionPane.showMessageDialog(rootPane,"Enter Value First");
        }
        else
        {
            t1.setText(s+"%");
        }
    }//GEN-LAST:event_bpi8ActionPerformed

    private void bpi9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bpi9ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_bpi9ActionPerformed

    private void bpi10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bpi10ActionPerformed
        // TODO add your handling code here:
       String s=t1.getText();       
        if(s.length()==0)
        {
            t1.setText(s);
            t3.setText(s);
        }
        else
        {
            if((s.contains("^"))&&(s.charAt(s.length()-1)!='^'))
            {
                //JOptionPane.showMessageDialog(rootPane,s.indexOf("^"));
                String s1=s.substring(0,(s.indexOf("^")));
                //JOptionPane.showMessageDialog(rootPane,s1);
                String s2=s.substring((s.indexOf("^")+1),(s.length()));
                //JOptionPane.showMessageDialog(rootPane,s2);
                double d=Math.pow(Double.parseDouble(s1),Double.parseDouble(s2));
                t3.setText(Double.toString(d));
            }
            else if(s.charAt(s.length()-1)=='^')
            {
            //float f=Float.parseFloat(s);
                
                JOptionPane.showMessageDialog(rootPane,"Enter Second Number To Caluclate Power");
                
            }
            else
                t1.setText(s+"^");
        } 
    }//GEN-LAST:event_bpi10ActionPerformed

    private void bpi11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bpi11ActionPerformed
        // TODO add your handling code here:
        String s=t1.getText();
        if(s.length()==0)
        {
            JOptionPane.showMessageDialog(rootPane,"Enter Value to Calculate");
            t1.setText("");
            t3.setText("");
        }
        else
        {
            double d=Math.log10(Double.parseDouble(s));
            BigDecimal b=new BigDecimal(d);
            b=b.setScale(5, RoundingMode.UP);
            t3.setText(b.toString());
        }
    }//GEN-LAST:event_bpi11ActionPerformed

    private void bpi12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bpi12ActionPerformed
        // TODO add your handling code here:
        String s=t1.getText();
        if(s.length()==0)
        {
            JOptionPane.showMessageDialog(rootPane,"Enter Value to Calculate");
            t1.setText("");
            t3.setText("");
        }
        else
        {
            double d=Math.log(Double.parseDouble(s));
            BigDecimal b=new BigDecimal(d);
            b=b.setScale(5, RoundingMode.UP);
            t3.setText(b.toString());
        }
    }//GEN-LAST:event_bpi12ActionPerformed

    private void bpi13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bpi13ActionPerformed
        // TODO add your handling code here:
        String s=t1.getText();
        try
        {
            int m=0;
            if(s.length()==0)
            {
                JOptionPane.showMessageDialog(rootPane,"Enter Value to Calculate");
                t1.setText("");
                t3.setText("");
            }
            else
            {
                int n=Integer.parseInt(s);
                m=fact(n);
                t3.setText(Integer.toString(m));
            }
        }
        catch(NumberFormatException exp)
        {
            JOptionPane.showMessageDialog(rootPane,"Factorial calculated for Integer Values Only");
            t1.setText("");
        }
    }//GEN-LAST:event_bpi13ActionPerformed

    private void bpi14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bpi14ActionPerformed
        // TODO add your handling code here:
        String s=t1.getText();
        int m=0;
        if(s.length()==0)
        {
            JOptionPane.showMessageDialog(rootPane,"Enter Value to Calculate");
            t1.setText("");
            t3.setText("");
        }
        else
        {
            String exp=null;
            ScriptEngineManager mgr=new ScriptEngineManager();
            ScriptEngine engine=mgr.getEngineByName("JavaScript");
            try 
            {
                exp=engine.eval(s).toString();
            } 
            catch (ScriptException ex)
            {
                Logger.getLogger(Scientific.class.getName()).log(Level.SEVERE, null, ex);
            }
            double d=Double.parseDouble(exp);
            d=1/d;
            if("Infinity".equals(Double.toString(d)))
            {
                JOptionPane.showMessageDialog(rootPane,"This Is Invalid Operation");
                t1.setText("");
            }
            else
                t3.setText(Double.toString(d));
        }
        
    }//GEN-LAST:event_bpi14ActionPerformed

    private void bstandardActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bstandardActionPerformed
        // TODO add your handling code here:
        Default d=new Default();
        d.setSize(512,512);
        d.setVisible(true);
        dispose();
    }//GEN-LAST:event_bstandardActionPerformed

    private void bscientificActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bscientificActionPerformed
        // TODO add your handling code here:
        Scientific sc=new Scientific();
        sc.setVisible(true);
        sc.setSize(600,600);
        dispose();
    }//GEN-LAST:event_bscientificActionPerformed

    private void bright1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bright1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_bright1ActionPerformed

    private void degActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_degActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_degActionPerformed

    private void bconverterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bconverterActionPerformed
        // TODO add your handling code here:
        Converter c=new Converter();
        c.setSize(512,512);
        c.setVisible(true);
        dispose();
    }//GEN-LAST:event_bconverterActionPerformed

    private void degItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_degItemStateChanged
        // TODO add your handling code here:
        //if(deg.isSelected())
    }//GEN-LAST:event_degItemStateChanged

    private void feItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_feItemStateChanged
        // TODO add your handling code here:
        if(fe.isSelected())
        {
            if((t1.getText().length()!=0)&&(t1.getText().indexOf(".")==-1))
            {
                t1.setText(t1.getText()+".e+0");
            }
            if((t1.getText().length()!=0)&&(t1.getText().indexOf(".")!=-1))
            {
                t1.setText(t1.getText()+"e+0");
            }
        }
        else 
        {
            if(t1.getText().charAt(t1.getText().indexOf("e")-1)=='.')
                t1.setText(t1.getText().substring(0,t1.getText().indexOf("e")-1));
            else
                t1.setText(t1.getText().substring(0,t1.getText().indexOf("e")));
        }
    }//GEN-LAST:event_feItemStateChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Scientific.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Scientific.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Scientific.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Scientific.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the form
         */
        
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new Scientific().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton b0;
    private javax.swing.JButton b1;
    private javax.swing.JButton b2;
    private javax.swing.JButton b3;
    private javax.swing.JButton b4;
    private javax.swing.JButton b5;
    private javax.swing.JButton b6;
    private javax.swing.JButton b7;
    private javax.swing.JButton b8;
    private javax.swing.JButton b9;
    private javax.swing.JButton bback;
    private javax.swing.JButton bc;
    private javax.swing.JButton bce;
    private javax.swing.JButton bconverter;
    private javax.swing.JButton bdiv;
    private javax.swing.JButton bdot;
    private javax.swing.JButton bequal;
    private javax.swing.JButton bm;
    private javax.swing.JButton bm3;
    private javax.swing.JButton bm4;
    private javax.swing.JButton bminus;
    private javax.swing.JButton bmul;
    private javax.swing.JPanel bpanel;
    private javax.swing.JPanel bpanel1;
    private javax.swing.JButton bpi;
    private javax.swing.JButton bpi1;
    private javax.swing.JButton bpi10;
    private javax.swing.JButton bpi11;
    private javax.swing.JButton bpi12;
    private javax.swing.JButton bpi13;
    private javax.swing.JButton bpi14;
    private javax.swing.JButton bpi2;
    private javax.swing.JButton bpi3;
    private javax.swing.JButton bpi4;
    private javax.swing.JButton bpi5;
    private javax.swing.JButton bpi6;
    private javax.swing.JButton bpi7;
    private javax.swing.JButton bpi8;
    private javax.swing.JButton bpi9;
    private javax.swing.JButton bplus;
    private javax.swing.JButton bporm;
    private javax.swing.JButton bright;
    private javax.swing.JButton bright1;
    private javax.swing.JButton broot;
    private javax.swing.JButton bscientific;
    private javax.swing.JButton bsin;
    private javax.swing.JButton bstandard;
    private javax.swing.JToggleButton deg;
    private javax.swing.JToggleButton fe;
    private javax.swing.JPanel jp;
    private javax.swing.JTextField t1;
    private javax.swing.JTextField t3;
    // End of variables declaration//GEN-END:variables

    private int fact(int n) 
    {
        int m=0;
        if(n>0)
        {
            m=n*fact(n-1);
            n--;
        }
        else if((n==0)||(n==1))
        {
            m=1;
        }
        return m;
    }
}
